{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","name","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","App","useDispatch","useSelector","useState","feedback","setFeedback","claimingNft","setClaimingNft","mintAmount","setMintAmount","getData","useEffect","style","backgroundColor","padding","textAlign","fontSize","fontWeight","Number","color","onClick","e","preventDefault","window","ethereum","metamaskIsInstalled","isMetaMask","request","method","Web3EthContract","setProvider","Web3","accounts","SmartContractObj","SmartContract","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","totalCostWei","String","totalGasLimit","mint","send","gasLimit","to","from","value","once","err","then","receipt","claimNFTs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63ccc9e9.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  name: \"\",\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        name: action.payload.name,\r\n        totalSupply: action.payload.totalSupply,\r\n        cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n//\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let name = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.name()\r\n        .call();\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      let cost = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.cost()\r\n        .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          name,\r\n          totalSupply,\r\n          cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\nimport SmartContract from \"../../contracts/ABI.json\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    await window.ethereum.request({\r\n      method: \"eth_requestAccounts\",\r\n  });\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        // const NetworkData = await SmartContract.networks[networkId];\r\n        if (networkId == 4) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            SmartContract,\r\n            \"0x969554884af1081E61B96fd6Fa1d1f7b897b0bD8\"\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(\"Change network to Ethereum\"));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--black);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 2px;\r\n  width: 2px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 10px;\r\n  width: 5px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 30px;\r\n  width: 10px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 60px;\r\n  width: 20px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 10)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--white);\r\n  font-size: 30px;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--white);\r\n  font-size: 16px;\r\n  font-family: 'Montserrat', sans-serif;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--white);\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: 20px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: .6;\r\n  }\r\n`;\r\n\r\nexport const BackgroundImage = styled.div`\r\n   background-color: var(--black);\r\n   background-image: ${({ image }) => (image ? `url(${image})` : \"https://gateway.pinata.cloud/ipfs/QmUvPLroxDvBoaGDrKh4qEYCTvfyK6hJduWrMwUUHF9Hor\")};\r\n   background-size: cover;\r\n   background-position: center;\r\n   width: 100%;\r\n   min-height: 100vh;\r\n   display: flex;\r\n   flex-direction: column;\r\n`;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport \"./styles/reset.css\";\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: .5px;\r\n  border: none;\r\n  background-color: #1b1f30;\r\n  padding: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-weight: bold;\r\n  color: #ffffff;\r\n  width: 200px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 0px 0px 3px rgba(50, 61, 111, 0.5);\r\n  -webkit-box-shadow: 0px 0px 0px 3px rgba(50, 61, 111, 1.0);\r\n  -moz-box-shadow: 0px 0px 0px 3px rgba(50, 61, 111, 0.5);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: 0px 0px 0px 3px rgba(50, 61, 111, 1.0);\r\n    -moz-box-shadow: none;\r\n  }\r\n  :hover {\r\n    -webkit-box-shadow: 0px 0px 0px 3px rgba(86, 105, 195, 1.0);\r\n  }\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 100%;\r\n  border: none;\r\n  background-color: #1b1f30;\r\n  padding: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: var(--primary-text);\r\n  width: 35px;\r\n  height: 35px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: ;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: var(--secondary);\r\n  text-decoration: none;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [feedback, setFeedback] = useState(\" Mint to join the coop\");\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [mintAmount, setMintAmount] = useState(1);\r\n\r\n  const claimNFTs = () => {\r\n    let cost = 100000000000000;\r\n    let gasLimit = 285000;\r\n    let totalCostWei = String(cost * mintAmount);\r\n    let totalGasLimit = String(gasLimit * mintAmount);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Releasing your chickens...`);\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(mintAmount)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: 0x969554884af1081E61B96fd6Fa1d1f7b897b0bD8,\r\n        from: blockchain.account,\r\n        value: totalCostWei,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Try again\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(\r\n          `Success!`  \r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const decrementMintAmount = () => {\r\n    let newMintAmount = mintAmount - 1;\r\n    if (newMintAmount < 1) {\r\n      newMintAmount = 1;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const incrementMintAmount = () => {\r\n    let newMintAmount = mintAmount + 1;\r\n    if (newMintAmount > 30) {\r\n      newMintAmount = 30;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <s.Screen style={{ backgroundColor: \"var(--blue)\" }}>\r\n      <s.Container flex={1} ai={\"center\"} style={{ padding: 20 }}>\r\n        <s.TextTitle\r\n          style={{ textAlign: \"center\", fontSize: 42, fontWeight: \"bold\" }}\r\n        >\r\n          \r\n        </s.TextTitle>\r\n        <ResponsiveWrapper flex={10} style={{ padding: 0 }}>\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n            <s.TextTitle\r\n              style={{ textAlign: \"center\", fontSize: 26, fontWeight: \"bold\" }}\r\n            >\r\n              {data.totalSupply} / 10000\r\n              <s.SpacerSmall/>\r\n            </s.TextTitle>\r\n          </s.Container>\r\n          <s.Container\r\n            flex={10}\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            style={{ backgroundColor: \"#1f2646\", padding: 2 }}\r\n          >\r\n            {Number(data.totalSupply) == 10000 ? (\r\n              <>\r\n              <s.TextTitle\r\n                style={{ textAlign: \"center\", color: \"var(--white)\" }}\r\n              >\r\n                Sold out!\r\n              </s.TextTitle>\r\n              <s.TextDescription\r\n                style={{ textAlign: \"center\", color: \"var(--white)\" }}\r\n              >\r\n                Please visit OpenSea\r\n              </s.TextDescription>\r\n            </>\r\n            ) : (\r\n              <>\r\n                <s.TextTitle\r\n                  style={{ textAlign: \"center\", color: \"var(--white)\" }}\r\n                >\r\n                </s.TextTitle>\r\n              \r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--white)\" }}\r\n                >\r\n                </s.TextDescription>\r\n                \r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"}>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--white)\",\r\n                      }}\r\n                    >\r\n                      Connect your wallet\r\n                    </s.TextDescription>\r\n                    <s.SpacerMedium />\r\n                    <StyledButton\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      CONNECT\r\n                    </StyledButton>\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            color: \"var(--white)\",\r\n                          }}\r\n                        >\r\n                          Connect to Ethereum Mainnet\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                ) : (\r\n                  <>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        fontSize: 19,\r\n                        color: \"var(--white)\",\r\n                      }}\r\n                    >\r\n                      {feedback}\r\n                    </s.TextDescription>\r\n                    <s.SpacerSmall />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledRoundButton\r\n                        style={{ lineHeight: 0.4 }}\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          decrementMintAmount();\r\n                        }}\r\n                      >\r\n                        -\r\n                      </StyledRoundButton>\r\n                      <s.SpacerLarge />\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"var(--white)\",\r\n                        }}\r\n                      >\r\n                        {mintAmount} \r\n                      </s.TextDescription> \r\n                      <s.SpacerLarge />\r\n                      <StyledRoundButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          incrementMintAmount();\r\n                        }}\r\n                      >\r\n                        +\r\n                      </StyledRoundButton>\r\n                    </s.Container>\r\n                    <s.SpacerSmall />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          claimNFTs();\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        {claimingNft ? \"...\" : \"MINT\"}\r\n                      </StyledButton>\r\n                    </s.Container>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            <s.SpacerMedium />\r\n          </s.Container>\r\n          <s.SpacerLarge />\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n          </s.Container>\r\n        </ResponsiveWrapper>\r\n        <s.SpacerMedium />\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\nimport \"./styles/theme.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}